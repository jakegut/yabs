go_tc := go("go1.20.7")

go_files := fs("go_files", ["go.mod", "go.sum", "**/*.go"])

register("go_download", [go_tc, go_files], func(bc){
    go_bin := bc.GetDep(go_tc) + "/" + "go"

    '{go_bin} mod download' | sh
})

release_all := []

func build_go(goos, goarch) {
    name := 'release_{goos}_{goarch}'
    release_all.append(name)
    register(name, [go_files, go_tc, "go_download"], func(bc) {
        goos := goos
        goarch := goarch

        go_bin := bc.GetDep(go_tc) + "/go"
        out_path := 'release/yabs_{goos}_{goarch}'

        sh('GOOS={goos} GOARCH={goarch} {go_bin} build -o ../../{out_path} -C cmd/yabs')
    })
}

for _, goos := range ["windows", "darwin", "linux"] {
    for _, goarch := range ["amd64", "arm64"] {
        build_go(goos, goarch)
    }
}

register("release", release_all, func (bc) {})

register("build", [go_files, go_tc, "go_download"], func(bc){
    go_bin := bc.GetDep(go_tc) + "/" + "go"
    '{go_bin} build -o ../../bin/yabs -C cmd/yabs' | sh
})


"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[503],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>m});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),s=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=s(e.components);return r.createElement(c.Provider,{value:n},e.children)},g="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),g=s(t),d=o,m=g["".concat(c,".").concat(d)]||g[d]||p[d]||i;return t?r.createElement(m,a(a({ref:n},u),{},{components:t})):r.createElement(m,a({ref:n},u))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=d;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l[g]="string"==typeof e?e:o,a[1]=l;for(var s=2;s<i;s++)a[s]=t[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},2148:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var r=t(7462),o=(t(7294),t(3905));const i={sidebar_position:3},a="Examples",l={unversionedId:"examples",id:"examples",title:"Examples",description:"Build Multiple Go Binaries",source:"@site/docs/examples.mdx",sourceDirName:".",slug:"/examples",permalink:"/docs/examples",draft:!1,editUrl:"https://github.com/jakegut/yabs/tree/main/docs/docs/examples.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Builtins & Types",permalink:"/docs/builtins-types"}},c={},s=[{value:"Build Multiple Go Binaries",id:"build-multiple-go-binaries",level:2},{value:"Run <code>golangci-lint</code>",id:"run-golangci-lint",level:2}],u={toc:s},g="wrapper";function p(e){let{components:n,...t}=e;return(0,o.kt)(g,(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"examples"},"Examples"),(0,o.kt)("h2",{id:"build-multiple-go-binaries"},"Build Multiple Go Binaries"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'// use a go toolchain with a specific version, returns the name of the target\ngo_tc := go("go1.20.7")\n\n// depend on files using `fs(name, list of globs)`, returns the name of the target\ngo_files := fs("go_files", ["go.mod", "go.sum", "**/*.go"])\n\n// create a target `register(name, list of deps, task func)`\nregister("go_download", [go_tc, go_files], func(bc){\n    sh(\'go mod download\')\n})\n\nbuild_all := []\n\nfor _, goos := range ["windows", "darwin", "linux"] {\n    for _, goarch := range ["amd64", "arm64"] {\n        name := \'build_{goos}_{goarch}\'\n        build_all.append(name)\n        register(name, [go_tc, go_files, "go_download"], func(bc) {\n            goos := goos\n            goarch := goarch\n\n            // Put any outputs in bc.Out to cache them with yabs\n            sh(\'GOOS={goos} GOARCH={goarch} go build -o {bc.Out} .\')\n        })\n    }\n}\n\nregister("build_all", build_all, func(bc) {\n    for _, build := range build_all {\n        // direct dependencies\' outputs are available at `bc.GetDep(target)`\n        bin_loc := bc.GetDep(build)\n        print(build, bin_loc)\n    }\n})\n')),(0,o.kt)("h2",{id:"run-golangci-lint"},"Run ",(0,o.kt)("inlineCode",{parentName:"h2"},"golangci-lint")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'go_tc := go("go1.20.7")\n\ngo_files := fs("go_files", ["go.mod", "go.sum", "**/*.go"])\n\nos.setenv("GOLANGCI_LINT_CACHE", os.getenv("GOPATH")+"/.lint_cache")\n\nregister("golangci-lint", [go_tc], func(bc) {\n    cmd := \'GOBIN={bc.Out} go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.54.0\'\n    sh(cmd)\n})\n\nregister("lint", ["golangci-lint", go_tc], func(bc){\n    lint_bin := bc.GetDep("golangci-lint") + "/golangci-lint"\n\n    sh(\'PATH={bc.GetDep(go_tc)} {lint_bin} run\')\n})\n')))}p.isMDXComponent=!0}}]);